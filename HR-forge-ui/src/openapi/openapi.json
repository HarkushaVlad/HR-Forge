{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenApi specification - Vhark",
    "description": "OpenApi documentation for Hr-forge-api",
    "termsOfService": "Terms of service",
    "contact": {
      "name": "Vhark",
      "email": "contact@vhark.com"
    },
    "license": {
      "name": "No license"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Local ENV"
    },
    {
      "url": "https://some-url.com",
      "description": "PROD ENV"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Personal",
      "description": "API for managing personal information"
    },
    {
      "name": "Position",
      "description": "API for managing positions"
    },
    {
      "name": "Department",
      "description": "API for managing department data"
    },
    {
      "name": "Authentication",
      "description": "API for user authentication and registration"
    },
    {
      "name": "Employee",
      "description": "API for managing employee data"
    }
  ],
  "paths": {
    "/position/{id-or-name}": {
      "get": {
        "tags": [
          "Position"
        ],
        "summary": "Find position by ID or name",
        "description": "Endpoint for retrieving a position by ID or name.",
        "operationId": "getPosition",
        "parameters": [
          {
            "name": "id-or-name",
            "in": "path",
            "description": "Position ID or name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PositionResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Position"
        ],
        "summary": "Update position",
        "description": "Endpoint for updating an existing position by ID or name.",
        "operationId": "updatePosition",
        "parameters": [
          {
            "name": "id-or-name",
            "in": "path",
            "description": "Position ID or name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Position details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Position"
        ],
        "summary": "Delete position",
        "description": "Endpoint for deleting a position by ID or name.",
        "operationId": "deletePosition",
        "parameters": [
          {
            "name": "id-or-name",
            "in": "path",
            "description": "Position ID or name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/personal": {
      "get": {
        "tags": [
          "Personal"
        ],
        "summary": "Find personal information",
        "description": "Endpoint for retrieving personal information of the authenticated user.",
        "operationId": "getPersonal",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Personal"
        ],
        "summary": "Update personal information",
        "description": "Endpoint for updating personal information of the authenticated user.",
        "operationId": "updatePersonal",
        "requestBody": {
          "description": "Updated personal information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/personal/password": {
      "put": {
        "tags": [
          "Personal"
        ],
        "summary": "Update password",
        "description": "Endpoint for updating password of the authenticated user.",
        "operationId": "updatePersonalPassword",
        "requestBody": {
          "description": "New password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/employee/{id-or-email}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Find employee by ID or email",
        "description": "Endpoint for retrieving an employee by ID or email address.",
        "operationId": "getEmployee",
        "parameters": [
          {
            "name": "id-or-email",
            "in": "path",
            "description": "Employee ID or email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update employee details",
        "description": "Endpoint for updating employee details by ID or email.",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "id-or-email",
            "in": "path",
            "description": "Employee ID or email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete employee",
        "description": "Endpoint for deleting an employee by ID or email.",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "name": "id-or-email",
            "in": "path",
            "description": "Employee ID or email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/employee/password/{id}": {
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update employee password",
        "description": "Endpoint for updating an employee's password by ID (admin operation).",
        "operationId": "updateEmployeePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Employee ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/department/{id-or-name}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Find department by ID or name",
        "description": "Endpoint for retrieving a department by ID or name.",
        "operationId": "getDepartment",
        "parameters": [
          {
            "name": "id-or-name",
            "in": "path",
            "description": "Department ID or name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Department"
        ],
        "summary": "Update department",
        "description": "Endpoint for updating an existing department by ID or name.",
        "operationId": "updateDepartment",
        "parameters": [
          {
            "name": "id-or-name",
            "in": "path",
            "description": "Department ID or name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Department details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Department"
        ],
        "summary": "Delete department",
        "description": "Endpoint for deleting a department by ID or name.",
        "operationId": "deleteDepartment",
        "parameters": [
          {
            "name": "id-or-name",
            "in": "path",
            "description": "Department ID or name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/position": {
      "get": {
        "tags": [
          "Position"
        ],
        "summary": "Find all positions",
        "description": "Endpoint for retrieving a paginated list of all positions.",
        "operationId": "getAllPositions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "example": 10
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Field to sort by",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name"
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction (ASC or DESC)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponsePositionResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Position"
        ],
        "summary": "Create position",
        "description": "Endpoint for creating a new position.",
        "operationId": "createPosition",
        "requestBody": {
          "description": "Position details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/department": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Find all departments",
        "description": "Endpoint for retrieving a paginated list of all departments.",
        "operationId": "getAllDepartments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "example": 10
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Field to sort by",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name"
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction (ASC or DESC)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseDepartmentResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Create department",
        "description": "Endpoint for creating a new department.",
        "operationId": "createDepartment",
        "requestBody": {
          "description": "Department details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "Endpoint for registering a new user in the system.",
        "operationId": "register",
        "requestBody": {
          "description": "Registration request details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/auth/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate a user",
        "description": "Endpoint for authenticating a user and generating an authentication token.",
        "operationId": "authenticate",
        "requestBody": {
          "description": "Authentication request details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Find all employees",
        "description": "Endpoint for retrieving a paginated list of all employees.",
        "operationId": "getAllEmployees",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "example": 10
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Field to sort by",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "firstName"
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction (ASC or DESC)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseEmployeeResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PositionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "PersonalRequest": {
        "required": [
          "birthDate",
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "PasswordRequest": {
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "maxLength": 2147483647,
            "minLength": 6,
            "type": "string"
          },
          "oldPassword": {
            "maxLength": 2147483647,
            "minLength": 6,
            "type": "string"
          }
        }
      },
      "EmployeeRequest": {
        "required": [
          "birthDate",
          "departmentName",
          "email",
          "firstName",
          "hireDate",
          "lastName",
          "positionName",
          "salary"
        ],
        "type": "object",
        "properties": {
          "departmentName": {
            "type": "string"
          },
          "positionName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "salary": {
            "type": "number",
            "format": "double"
          },
          "hireDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AdminPasswordRequest": {
        "required": [
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "maxLength": 2147483647,
            "minLength": 6,
            "type": "string"
          }
        }
      },
      "DepartmentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RegistrationRequest": {
        "required": [
          "birthDate",
          "departmentName",
          "email",
          "firstName",
          "hireDate",
          "lastName",
          "password",
          "positionName",
          "salary"
        ],
        "type": "object",
        "properties": {
          "departmentName": {
            "type": "string"
          },
          "positionName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 6,
            "type": "string"
          },
          "salary": {
            "type": "number",
            "format": "double"
          },
          "hireDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthenticationRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 6,
            "type": "string"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "PageResponsePositionResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "PositionResponse": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "EmployeeResponse": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentName": {
            "type": "string"
          },
          "positionName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "salary": {
            "type": "number",
            "format": "double"
          },
          "hireDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageResponseEmployeeResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "DepartmentResponse": {
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "PageResponseDepartmentResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT auth",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
